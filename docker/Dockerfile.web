# QaAI Web Frontend Dockerfile
# Multi-stage build for production optimization

# ================================================================
# Base stage with Node.js
# ================================================================
FROM node:18-alpine AS base

# Set working directory
WORKDIR /app

# Install curl for health checks
RUN apk add --no-cache curl

# ================================================================
# Dependencies stage
# ================================================================
FROM base AS dependencies

# Copy package files
COPY apps/web/package*.json apps/web/
WORKDIR /app/apps/web

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# ================================================================
# Development stage
# ================================================================
FROM base AS development

# Copy package files and install all dependencies (including dev)
COPY apps/web/package*.json apps/web/
WORKDIR /app/apps/web
RUN npm ci && npm cache clean --force

# Copy source code
COPY apps/web/ .
COPY examples/design/ /app/examples/design/

# Create non-root user
RUN addgroup -g 1001 -S qaai && \
    adduser -S qaai -u 1001

# Change ownership
RUN chown -R qaai:qaai /app

# Switch to non-root user
USER qaai

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# Start development server
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

# ================================================================
# Build stage
# ================================================================
FROM base AS build

# Copy package files and install dependencies
COPY apps/web/package*.json apps/web/
WORKDIR /app/apps/web
RUN npm ci && npm cache clean --force

# Copy source code and design files
COPY apps/web/ .
COPY examples/design/ /app/examples/design/

# Build the application
RUN npm run build

# ================================================================
# Production stage
# ================================================================
FROM nginx:alpine AS production

# Copy built files from build stage
COPY --from=build /app/apps/web/dist /usr/share/nginx/html

# Copy nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Create non-root user
RUN addgroup -g 1001 -S qaai && \
    adduser -S qaai -u 1001 && \
    chown -R qaai:qaai /usr/share/nginx/html && \
    chown -R qaai:qaai /var/cache/nginx && \
    chown -R qaai:qaai /var/log/nginx && \
    chown -R qaai:qaai /etc/nginx/conf.d

# Switch to non-root user
USER qaai

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# ================================================================
# Metadata
# ================================================================
LABEL maintainer="QaAI Team"
LABEL description="QaAI Legal Assistant Web Frontend"
LABEL version="1.0.0"

EXPOSE 3000